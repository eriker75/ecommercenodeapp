version: "3.8"

volumes:
  pgdata:
    name: pgdata
    external: false
  pgadmin-data:
    name: pgadmin-data
    external: false

networks:
  appnet:
    driver: bridge

services:
  postgres:
    container_name: postgres
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_EXT_PORT}:5432"
    networks:
      - appnet

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8.12
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - appnet

  backendapp:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: backendapp
    image: backendapp
    restart: always
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 60s
      timeout: 15s
      retries: 5
    depends_on:
      - postgres
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/usr/src/app
      - ./backend/nodemon.json:/usr/src/app/nodemon.json
      - ./backend/runner.sh:/usr/src/app/runner.sh
    command: ["/bin/sh", "/usr/src/app/runner.sh"]
    networks:
      - appnet
